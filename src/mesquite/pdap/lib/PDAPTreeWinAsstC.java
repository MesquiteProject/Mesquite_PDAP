/* PDAP:PDTREE package for Mesquite  copyright 2001-2009 P. Midford & W. MaddisonPDAP:PDTREE is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.The web site for PDAP:PDTREE is http://mesquiteproject.org/pdap_mesquite/This source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html) */package mesquite.pdap.lib;import mesquite.lib.*;import mesquite.lib.characters.*;import mesquite.lib.duties.*;/* ======================================================================== *//** * This is the duty class for PDAPDiagnostic chart, which handles the chart PDAP displays * @author Peter E. Midford */public abstract class PDAPTreeWinAsstC extends TreeWindowAssistantC {    public Class getDutyClass() {        return PDAPTreeWinAsstC.class;    }    public String getDutyName() {        return "Provides chart for PDAP";    }        /**     *      * @return first (horizontal) character currently displayed     */    public abstract CharacterDistribution getObserved1();        /**     *      * @return second (vertical) character currently displayed     */    public abstract CharacterDistribution getObserved2();    /**     *      * @return tree currently displayed     */    public abstract Tree getTree();    /**     *      * @return true if a degrees of freedom reduction query has been done for this tree     */    public abstract boolean getDFQueryDone();        /**     *      * @param value sets whether the degrees of freedom query has been done for this tree     */    public abstract void setDFQueryDone(boolean value);        /**     * Actually does the query (shows a dialog, etc.)     * @param sp the screen 9+ statpak in current use     * @param notifyIfZero true if the dialog should appear even if there are no polytomies     * @return the degrees of freedom to reduce     */    public abstract int queryDFReduce(PDAP2CTStatPak sp, boolean notifyIfZero);    /**     *      * @return     */    public abstract boolean getVhQueryDone();    /**     *      * @param value     */    public abstract void setVhQueryDone(boolean value);    /**     *      * @param sp     * @return     */    public abstract double queryVh(PDAP2CTStatPak sp);        /**     *      * @return     */    public abstract double getVh();    /**     *      */    public abstract void queryWidths();    /**     *      * @return     */    public abstract double getWidth1();    /**     *      * @return     */    public abstract double getWidth2();    /**     *      * @param value     */    public abstract void setWidthQueryDone(boolean value);    /**     *      * @return     */    public abstract boolean getWidthQueryDone();    /**     *      */    public abstract void queryVerboseQueryMode();    /**     *      * @param arg string that is parsed to extract value that the      * verbose query mode flag is set to     */    public abstract void toggleVerboseQueryMode(String arg);    /**     *      * @return state of the verbose query mode flag     */    public abstract boolean getVerboseQueryMode();    /**     *      * @return current number of degrees of freedom to reduce due to polytomies     */    public abstract int getDFReduction();    /**     *      * @param value new value for number of degrees of freedom to reduce     */    public abstract void setDFReduction(int value);    /**     * Value of ignore root tritomies flag is set via user dialog     */    public abstract void queryIgnoreRootTritomies();    /**     *      * @return state of ignore root tritomies floag     */    public abstract boolean getIgnoreRootTritomies();    /**     *      * @param value new value for ignore root tritomies flag     */    public abstract void setIgnoreRootTritomies(boolean value);}