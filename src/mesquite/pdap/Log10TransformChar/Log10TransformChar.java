/* PDAP:PDTREE package for Mesquite  copyright 2001-2009 P. Midford & W. MaddisonPDAP:PDTREE is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.The web site for PDAP:PDTREE is http://mesquiteproject.org/pdap_mesquite/This source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html) */package mesquite.pdap.Log10TransformChar;import mesquite.lib.*;import mesquite.lib.characters.CharacterData;import mesquite.cont.lib.*;import mesquite.lib.table.*;/** ======================================================================== */public class Log10TransformChar extends ContDataAlterer {    static final double log10 = Math.log(10.0);    /*.................................................................................................................*/    public boolean startJob(String arguments, Object condition, boolean hiredByName) {        return true;    }    /**      * Called to alter data in those cells selected in table - actually this just does some error checking and     * passes on to the superclass method alterContentOfCells.     * @param data      * @param table     * @param undoReference     * @return true when data was altered     */    public boolean alterData(CharacterData data, MesquiteTable table, UndoReference undoReference){        if (!(data instanceof ContinuousData))            return false;        return alterContentOfCells(data,table, undoReference);    }    boolean firstTime = true;    /*.................................................................................................................*/    /**     * Alters an individual cell     * @param ddata     * @param ic index of character     * @param it index of taxon     */    public void alterCell(CharacterData ddata, int ic, int it){        ContinuousData data = ((ContinuousData)ddata);        for (int item = 0; item<data.getNumItems(); item++){            double state = data.getState(ic,it, item);            if (MesquiteDouble.isCombinable(state)) {                if (state<=0) {                    if (firstTime)                        discreetAlert( "Some values could not be log transformed because they were zero or negative");                    firstTime = false;                }                else                    data.setState(ic,it, item, Math.log(state)/log10);            }        }    }    /*.................................................................................................................*/    public boolean showCitation(){        return true;    }    /*.................................................................................................................*/    public String getName() {        return "Log10 transform";    }    /*.................................................................................................................*/    public String getVersion() {        return "1.15";    }    /*.................................................................................................................*/    public boolean isPrerelease() {        return false;    }    /*................................................................................................................*/    public boolean isSubstantive(){        return true;    }            /*.................................................................................................................*/    public String getAuthors() {        return "Peter E. Midford, Ted Garland Jr., and Wayne P. Maddison";    }    /*.................................................................................................................*/    /** returns an explanation of what the module does.*/    public String getExplanation() {        return "Alters continuous data by log base 10 transforming values." ;    }}